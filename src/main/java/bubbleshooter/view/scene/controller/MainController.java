package bubbleshooter.view.scene.controller;

import bubbleshooter.controller.Controller;
import bubbleshooter.model.game.level.LevelType;
import bubbleshooter.utility.Settings;
import bubbleshooter.view.View;
import bubbleshooter.view.scene.FXMLPath;
import javafx.fxml.FXML;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.text.Font;
import javafx.scene.text.TextAlignment;

/**
 * The Controller related to the main.fxml GUI.
 *
 */
public final class MainController extends AbstractController {

    @FXML private Button basicModeButton = new Button();
    @FXML private Button survivalModeButton = new Button();
    @FXML private Button highscoresButton = new Button();
    @FXML private Button quitButton = new Button();
    @FXML private Label titleLabel = new Label();
    private static final double TITLE_DISTANCE = Settings.getGuiHeight() / 10;
    private static final double TITLE_HEIGHT = Settings.getGuiHeight() / 8;
    private static final double TITLE_WIDTH = Settings.getGuiWidth();
    private static final double TITLE_FONT_SIZE = TITLE_HEIGHT / 1.5;
    private static final double BUTTON_DISTANCE = Settings.getGuiHeight() / 50;
    private static final double BUTTON_WIDTH = Settings.getGuiWidth() / 2;
    private static final double BUTTON_HEIGHT = Settings.getGuiHeight() / 10;
    private static final double BUTTON_X = Settings.getGuiWidth() / 2 - BUTTON_WIDTH / 2;
    private static final double BUTTON_FONT_SIZE = BUTTON_HEIGHT / 2.5;

    @Override
    public void init(final Controller controller, final View view) {
        super.init(controller, view);

        this.titleLabel.setText("Bubble Shooter");
        this.titleLabel.setFont(Font.font(TITLE_FONT_SIZE));
        this.titleLabel.setAlignment(Pos.BOTTOM_CENTER);
        this.titleLabel.setPrefSize(TITLE_WIDTH, TITLE_HEIGHT);

        this.basicModeButton.setText("Basic Mode");
        this.basicModeButton.setTextAlignment(TextAlignment.CENTER);
        this.basicModeButton.setLayoutX(BUTTON_X);
        this.basicModeButton.setLayoutY(TITLE_HEIGHT + TITLE_DISTANCE);
        this.basicModeButton.setPrefSize(BUTTON_WIDTH, BUTTON_HEIGHT);
        this.basicModeButton.setFont(Font.font(BUTTON_FONT_SIZE));

        this.survivalModeButton.setText("Survival Mode");
        this.survivalModeButton.setTextAlignment(TextAlignment.CENTER);
        this.survivalModeButton.setLayoutX(BUTTON_X);
        this.survivalModeButton.setLayoutY(this.basicModeButton.getLayoutY() + BUTTON_HEIGHT + BUTTON_DISTANCE);
        this.survivalModeButton.setPrefSize(BUTTON_WIDTH, BUTTON_HEIGHT);
        this.survivalModeButton.setFont(Font.font(BUTTON_FONT_SIZE));

        this.highscoresButton.setText("Highscores");
        this.highscoresButton.setTextAlignment(TextAlignment.CENTER);
        this.highscoresButton.setLayoutX(BUTTON_X);
        this.highscoresButton.setLayoutY(this.survivalModeButton.getLayoutY() + BUTTON_HEIGHT + BUTTON_DISTANCE);
        this.highscoresButton.setPrefSize(BUTTON_WIDTH, BUTTON_HEIGHT);
        this.highscoresButton.setFont(Font.font(BUTTON_FONT_SIZE));

        this.quitButton.setText("Quit");
        this.quitButton.setTextAlignment(TextAlignment.CENTER);
        this.quitButton.setLayoutX(BUTTON_X);
        this.quitButton.setLayoutY(this.highscoresButton.getLayoutY() + BUTTON_HEIGHT + BUTTON_DISTANCE);
        this.quitButton.setPrefSize(BUTTON_WIDTH, BUTTON_HEIGHT);
        this.quitButton.setFont(Font.font(BUTTON_FONT_SIZE));
    }

    /**
     * The handler for the click event generated by the 'basicModeButton' button.
     */
    @FXML
    public void basicMode() {
        this.getController().startGame(LevelType.BASICMODE);
        this.nextScene();
    }

    /**
     * The handler for the click event generated by the 'survivalModeButton' button.
     */
    @FXML
    public void survivalMode() {
        this.getController().startGame(LevelType.SURVIVALMODE);
        this.nextScene();
    }

    /**
     * The handler for the click event generated by the 'highscoresButton' button.
     */
    @FXML
    public void highscores() {
        this.getView().loadScene(FXMLPath.HIGHSCORE);
    }

    /**
     * The handler for the click event generated by the 'quitButton' button.
     */
    @FXML
    public void quit() {
        System.exit(0);
    }

    @Override
    public FXMLPath getNextScene() {
        return FXMLPath.GAME; 
    }

    @Override
    protected FXMLPath getPreviousScene() {
        return FXMLPath.MAIN; 
    }
}
